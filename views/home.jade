extends layouts/global

block head2
  link(rel='stylesheet', href='http://fonts.googleapis.com/css?family=Rambla:400,700|Source+Sans+Pro:400,600')

block content
  #content
    nav
      .wrapper
        h1.logo Borg Documentation
        ul.right
          li
            a(href='https://github.com/mikesmullin/borg') Github
          li.toc
            a(href='#') Docs
          li
            a(href='#') Contribute
          li
            a(href='#') Credits
        .clear

    header
      .wrapper
        h2 Borg Documentation (v#{version})
        p
          | This information is designed to make you immediately productive with 
          strong: a(href="https://www.npmjs.com/package/borg") Borg v#{borg_version}
          | .
          br
          | When additional versions are released, previous versions will be linked here.
          br
          | Let&rsquo;s get started!

    article
      .wrapper
        h2 1. Getting Started
        h3
          | 1.1. Install 
          a(href="http://nodejs.org") Node.JS
          |  (using 
          a(href="https://github.com/creationix/nvm") NVM 
          | is recommended)
        pre: code
          | curl https://raw.github.com/creationix/nvm/master/install.sh | sh
          | nvm install #{node_version} # latest stable preferred
          | nvm use #{node_version}
          | nvm alias default #{node_version}

        h3
          | 1.2. Install 
          a(href="https://github.com/mikesmullin/borg") Borg
        pre: code
          | npm install borg -g

        h3 1.3. Generate a New Project
        pre: code
          | borg init Devops
          | cd Devops/
        p
          | Or, clone an 
          a(href="https://github.com/mikesmullin/borg-sample-project") existing
          |  one.

        h3 1.4. Explore Help
        pre: code
          | borg help

        h2 2. Cloud Integration
        p
          | Though abstracted to integrate with any cloud provider,
          | only 
          a(href="http://aws.amazon.com/") Amazon Web Services
          |  integration is implemented at present.

        h3 2.1. Amazon Web Services
        p This integration depends on the AWS CLI utility being installed:
        pre: code
          | cd /tmp
          | wget https://s3.amazonaws.com/aws-cli/awscli-bundle.zip
          | unzip awscli-bundle.zip
          | sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
          | aws --version # test
        p and configured:
        pre: code
          | aws configure
          | Access Key ID: your-aws-access-key-id
          | Secret Access Key: your-aws-secret-key
        p
          | For more information, please see:
          br
          a(href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/set-up-ec2-cli-linux.html") Setting Up the Amazon EC2 Command Line Interface Tools


        h2 3. Introduction

        h3 3.1. Vernacular
        ul
          li
            strong script: 
            | file containing code listing steps to complete orchestration.
            br
            br
          li 
            strong resource: 
            | named function organizing common steps for reuse across multiple scripts; often with the secondary goal of becoming os agnostic.
            br
            br
          li 
            strong server: 
            | file containing code defining how remote machines are named and addressed, and which scripts must be applied in order to complete their orchestration.
            br
            br
          li 
            strong attribute: 
            | server variable; representing static data, dynamic runtime calculation functions, or personal preferences/overrides for use by scripts at runtime.
            br
            br
          li 
            strong networks.coffee: 
            | file containing a list of servers and their attributes--as well as the relationship of one server to another in a hierarchy of datacenters, groups, server types, and server instances.
            br
            br
          li 
            strong datacenter: 
            | the outermost unit available for the grouping of reusable server definitions (e.g., one datacenter may contain two or more instances of the same server)
            br
            br
          li 
            strong group: 
            | another unit available for the grouping of servers; typically named after the environment and project (e.g., a datacenter may contain a group for the production environment of project A as well as the staging environment for project B, both of which contain separate instances of the same type of server)
            br
            br
          li 
            strong borg create: 
            | to provision a new empty remote server via cloud provider apis.
            br
            br
          li 
            strong borg assimilate: 
            | to orchestrate a remote server.
            br
            br
          li 
            strong borg assemble: 
            | to both create and then assimilate.
            br
            br

        h3 3.2. Directory structure
        pre: code
          | attributes/		JSON and CSON files; see 
          a(href="#") Attributes
          |  chapter below
          |   networks.coffee	your datacenter and server hierarchy
          |   memory.json		remembers details from cloud provider api interactions
          | scripts/		your Scripts; see 
          a(href="#") Scripts
          |  chapter below
          |   server/		code defining which Servers use which Scripts
          |   vendor/		third-party Scripts as Git submodules








        h2 3. Contributing
        p Your contributions are welcome via Github.com.

        h3 3.1. Issuing a Pull Request
        ol
          li
            p
              | fork and clone 
              a(href='https://github.com/mikesmullin/borg') https://github.com/mikesmullin/borg
          li edit to heart&rsquo;s content
          li
            p publish to your fork:
            pre: code git commit && git push
          li issue pull request to official fork, and we will review and approve or provide feedback.

    aside
      .wrapper
        .content
          h3 Chapters
          ol
            li
              a(href='#') Getting Started
              ul
                li: a(href='#') Install Node.JS
                li: a(href='#') Install Borg
                li: a(href='#') Generate a New Project
                li: a(href='#') Explore Help
            li
              a(href='#') Cloud Integration
              ul
                li: a(href='#') Amazon Web Services
            li
              a(href='#') Introduction
              ul
                li: a(href='#') Vernacular
                li: a(href='#') Directory structure
            li
              a(href='#') Contributing
              ul
                li: a(href='#') Issuing a Pull Request

    footer
      .wrapper
        p
          | This documentation is licensed 
          a(href='http://creativecommons.org/licenses/by-sa/3.0/') Creative Commons Attribution-Share Alike 3.0
        p
          | "Borg" is a service mark of 
          a(href="http://smullindesign.com") Smullin Design
          | .
